name: Build and deploy Django app to Azure Web App - backend

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'  # 백엔드 관련 파일이 변경될 때만 실행
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 리포지토리에서 소스 코드 체크아웃
      - uses: actions/checkout@v4

      # 2. Python 버전 설정
      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 3. 가상환경 생성 및 시작
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      # 4. 의존성 설치 (backend/requirements.txt 확인)
      - name: Install dependencies
        run: pip install -r backend/requirements.txt

      # 5. 배포를 위한 zip 파일 생성
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      # 6. 배포 작업을 위한 zip 파일 업로드
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # JWT 요청에 필요함

    steps:
      # 1. Azure 로그인
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      # 2. 빌드 작업에서 생성된 아티팩트 다운로드
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      # 3. 배포를 위한 압축 해제
      - name: Unzip artifact for deployment
        run: unzip release.zip

      # 4. Azure Web App으로 배포
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'backend'  # Azure App Service 이름
          slot-name: 'Production'  # Production 슬롯 사용 (필요 시 삭제 가능)

      # 5. 배포 후 마이그레이션 실행 (필요한 경우)
      - name: Run Django migrations
        run: |
          source venv/bin/activate
          python manage.py migrate

      # 6. 배포 확인 (선택 사항)
      - name: Verify Deployment
        run: |
          curl -v https://backend.azurewebsites.net
