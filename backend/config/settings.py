"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from pathlib import Path
import os
import socket

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Environment Variables
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-m%6ebyrv)19fyt90w+pz0dt+%u#no4oi@x9$_lp5xn-*678*kg')

# Set DEBUG to False for production
DEBUG = os.getenv('DEBUG', 'True') == 'True'

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', 'localhost').split(',')

# Application definition

INSTALLED_APPS = [
    'api',
    'corsheaders',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware', 
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database configuration
HOSTNAME = socket.gethostname()

if 'azurewebsites.net' in HOSTNAME:
    # Azure 배포 환경
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': os.getenv('DB_NAME', 'default_db'),
            'USER': os.getenv('DB_USER', 'skdudgns'),
            'PASSWORD': os.getenv('DB_PASSWORD', '9P@ssw0rd'),
            'HOST': os.getenv('DB_HOST', 'teamdatabase.mysql.database.azure.com'),
            'PORT': os.getenv('DB_PORT', '3306'),
            'OPTIONS': {
                'ssl': {'ssl-mode': 'DISABLED'},
            },
        },
        'festival_db': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': os.getenv('FESTIVAL_DB_NAME', 'festival_db'),
            'USER': os.getenv('DB_USER', 'skdudgns'),
            'PASSWORD': os.getenv('DB_PASSWORD', '9P@ssw0rd'),
            'HOST': os.getenv('DB_HOST', 'teamdatabase.mysql.database.azure.com'),
            'PORT': os.getenv('DB_PORT', '3306'),
            'OPTIONS': {
                'ssl': {'ssl-mode': 'DISABLED'},
            },
        },
        'user_db': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': os.getenv('USER_DB_NAME', 'user_db'),
            'USER': os.getenv('DB_USER', 'skdudgns'),
            'PASSWORD': os.getenv('DB_PASSWORD', '9P@ssw0rd'),
            'HOST': os.getenv('DB_HOST', 'teamdatabase.mysql.database.azure.com'),
            'PORT': os.getenv('DB_PORT', '3306'),
            'OPTIONS': {
                'ssl': {'ssl-mode': 'DISABLED'},
            },
        },
    }
else:
    # 로컬 개발 환경
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'default_db',
            'USER': 'root',
            'PASSWORD': '1234',
            'HOST': 'localhost',
            'PORT': '3306',
        },
        'festival_db': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'festival_db',
            'USER': 'root',
            'PASSWORD': '1234',
            'HOST': 'localhost',
            'PORT': '3306',
        },
        'user_db': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'user_db',
            'USER': 'root',
            'PASSWORD': '1234',
            'HOST': 'localhost',
            'PORT': '3306',
        },
    }

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Azure에 배포 시 필요

# CORS and CSRF settings
CORS_ORIGIN_ALLOW_ALL = False
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = os.getenv('CORS_ALLOWED_ORIGINS', '').split(',')
CSRF_TRUSTED_ORIGINS = os.getenv('CSRF_TRUSTED_ORIGINS', '').split(',')

# Django REST Framework 기본 설정
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
}

# Database routers
DATABASE_ROUTERS = ['api.db_routers.MyDBRouter']
